diff --git a/src/Distribution/Hackage/DB/Parsed.hs b/src/Distribution/Hackage/DB/Parsed.hs
index fc789b4..b6070dd 100644
--- a/src/Distribution/Hackage/DB/Parsed.hs
+++ b/src/Distribution/Hackage/DB/Parsed.hs
@@ -50,8 +50,10 @@ parsePackageData pn (U.PackageData pv vs') =
     Map.mapWithKey (parseVersionData pn) $
       Map.filterWithKey (\v _ -> v `withinRange` vr) vs'
   where
-    Dependency _ vr | BS.null pv = Dependency pn anyVersion
-                    | otherwise  = parseText "preferred version range" (toString pv)
+    vr
+      | BS.null pv = anyVersion
+      | otherwise = case parseText "preferred version range" (toString pv) of
+          Dependency _ vr _ -> vr
 
 parseVersionData :: PackageName -> Version -> U.VersionData -> VersionData
 parseVersionData pn v (U.VersionData cf m) =
diff --git a/src/Distribution/Hackage/DB/Utility.hs b/src/Distribution/Hackage/DB/Utility.hs
index e6550cf..8540f55 100644
--- a/src/Distribution/Hackage/DB/Utility.hs
+++ b/src/Distribution/Hackage/DB/Utility.hs
@@ -13,10 +13,10 @@ import Codec.Archive.Tar.Entry as Tar
 import Data.Maybe
 import Data.Time.Clock
 import Data.Time.Clock.POSIX
-import Distribution.Text
+import Distribution.Parsec
 
-parseText :: Text a => String -> String -> a
-parseText t x = fromMaybe (throw (InvalidRepresentationOfType t x)) (simpleParse x)
+parseText :: Parsec a => String -> String -> a
+parseText t x = fromMaybe (throw (InvalidRepresentationOfType t x)) (simpleParsec x)
 
 -- | Convert the the 'EpochTime' used by the @tar@ library into a standard
 -- 'UTCTime' type.
